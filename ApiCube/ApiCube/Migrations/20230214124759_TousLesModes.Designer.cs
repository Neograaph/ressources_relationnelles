// <auto-generated />
using System;
using ApiCube.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiCube.Migrations
{
    [DbContext(typeof(AppContexte))]
    [Migration("20230214124759_TousLesModes")]
    partial class TousLesModes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.ActionType", b =>
                {
                    b.Property<int>("ActionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionTypeId"), 1L, 1);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ActionTypeId");

                    b.ToTable("ActionTypes");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdresseId"), 1L, 1);

                    b.Property<int?>("Cp")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("AdresseId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Aimer", b =>
                {
                    b.Property<DateTime>("DateAimer")
                        .HasColumnType("datetime2");

                    b.Property<int>("RessourceId")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasIndex("RessourceId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Aimers");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Commentaire", b =>
                {
                    b.Property<int>("CommentaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentaireId"), 1L, 1);

                    b.Property<int>("CommentaireReponse")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreation")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RessourceId1")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId1")
                        .HasColumnType("int");

                    b.HasKey("CommentaireId");

                    b.HasIndex("RessourceId1");

                    b.HasIndex("UtilisateurId1");

                    b.ToTable("Commentaires");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Consulter", b =>
                {
                    b.Property<int>("RessourceId")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasIndex("RessourceId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Consulters");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"), 1L, 1);

                    b.Property<string>("Chemin")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Poids")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.ModererCom", b =>
                {
                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CommentaireId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateModerCom")
                        .HasColumnType("datetime2");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasIndex("ActionTypeId");

                    b.HasIndex("CommentaireId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("ModererComs");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.ModererRes", b =>
                {
                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateModerRes")
                        .HasColumnType("datetime2");

                    b.Property<int>("RessourceId")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasIndex("ActionTypeId");

                    b.HasIndex("RessourceId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("ModererRess");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Rechercher", b =>
                {
                    b.Property<DateTime?>("RechercheDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RechercheLibelle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RessourceId")
                        .HasColumnType("int");

                    b.Property<int?>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasIndex("RessourceId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Recherchers");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Relation", b =>
                {
                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Ressource", b =>
                {
                    b.Property<int>("RessourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RessourceId"), 1L, 1);

                    b.Property<string>("CategorieLibelle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contenu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Valider")
                        .HasColumnType("bit");

                    b.Property<string>("VisibiliteLibelle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RessourceId");

                    b.HasIndex("DocumentId");

                    b.ToTable("Ressources");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Utilisateur", b =>
                {
                    b.Property<int>("UtilisateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtilisateurId"), 1L, 1);

                    b.Property<int?>("AdresseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DerniereConnexion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MotDePasse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("UtilisateurActif")
                        .HasColumnType("bit");

                    b.HasKey("UtilisateurId");

                    b.HasIndex("AdresseId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Aimer", b =>
                {
                    b.HasOne("ApiCube.Models.BuisnessObjects.Ressource", "Ressource")
                        .WithMany()
                        .HasForeignKey("RessourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.BuisnessObjects.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ressource");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Commentaire", b =>
                {
                    b.HasOne("ApiCube.Models.BuisnessObjects.Ressource", "RessourceId")
                        .WithMany()
                        .HasForeignKey("RessourceId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.BuisnessObjects.Utilisateur", "UtilisateurId")
                        .WithMany()
                        .HasForeignKey("UtilisateurId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RessourceId");

                    b.Navigation("UtilisateurId");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Consulter", b =>
                {
                    b.HasOne("ApiCube.Models.BuisnessObjects.Ressource", "Ressource")
                        .WithMany()
                        .HasForeignKey("RessourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.BuisnessObjects.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ressource");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.ModererCom", b =>
                {
                    b.HasOne("ApiCube.Models.BuisnessObjects.ActionType", "Action")
                        .WithMany()
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.BuisnessObjects.Commentaire", "Commentaire")
                        .WithMany()
                        .HasForeignKey("CommentaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.BuisnessObjects.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Commentaire");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.ModererRes", b =>
                {
                    b.HasOne("ApiCube.Models.BuisnessObjects.ActionType", "Action")
                        .WithMany()
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.BuisnessObjects.Ressource", "Ressource")
                        .WithMany()
                        .HasForeignKey("RessourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.BuisnessObjects.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Ressource");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Rechercher", b =>
                {
                    b.HasOne("ApiCube.Models.BuisnessObjects.Ressource", "Ressource")
                        .WithMany()
                        .HasForeignKey("RessourceId");

                    b.HasOne("ApiCube.Models.BuisnessObjects.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId");

                    b.Navigation("Ressource");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Relation", b =>
                {
                    b.HasOne("ApiCube.Models.BuisnessObjects.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Ressource", b =>
                {
                    b.HasOne("ApiCube.Models.BuisnessObjects.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("ApiCube.Models.BuisnessObjects.Utilisateur", b =>
                {
                    b.HasOne("ApiCube.Models.BuisnessObjects.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId");

                    b.Navigation("Adresse");
                });
#pragma warning restore 612, 618
        }
    }
}
